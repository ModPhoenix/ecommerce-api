#! spec.yaml
name: ecommerce-api
# Check https://www.digitalocean.com/docs/app-platform/#regional-availability
# for a list of all the available options.
# You can get region slugs from
# https://www.digitalocean.com/docs/platform/availability-matrix/
# They must specified lowercased.
# `fra` stands for Frankfurt (Germany - EU)
region: fra
services:
  - name: ecommerce-api
    # Relative to the repository root
    dockerfile_path: Dockerfile
    source_dir: .
    github:
      # Depending on when you created the repository,
      # the default branch on GitHub might have been named `master`
      branch: master
      # Deploy a new version on every commit to `main`!
      # Continuous Deployment, here we come!
      deploy_on_push: true
      # !!! Fill in with your details
      # repo: <YOUR USERNAME>/<YOUR REPOSITORY NAME>
      repo: ModPhoenix/ecommerce-api
    # Active probe used by DigitalOcean's to ensure our application is healthy
    health_check:
      # The path to our health check endpoint!
      # It turned out to be useful in the end!
      http_path: /health_check
    # The port the application will be listening on for incoming requests
    # It should match what we specified in our configuration/production.yaml file!
    http_port: 8000
    # For production workloads we'd go for at least two!
    # But let's try to keep the bill under control for now...
    instance_count: 1
    instance_size_slug: basic-xxs
    # All incoming requests should be routed to our app
    routes:
      - path: /
    envs:
      - key: APP_DATABASE_URL
        scope: RUN_TIME
        value: ${ecommerce-api.DATABASE_URL}
      - key: APP_HOST
        scope: RUN_TIME
        value: ${ecommerce-api.HOST}
      - key: APP_PORT
        scope: RUN_TIME
        value: ${ecommerce-api.PORT}
      - key: APP_RUST_LOG
        scope: RUN_TIME
        value: ${ecommerce-api.RUST_LOG}

databases:
  # PG = Postgres
  - engine: PG
    # Database name
    name: ecommerce
    # Again, let's keep the bill lean
    num_nodes: 1
    size: db-s-dev-database
    # Postgres version - using the latest here
    version: "12"
